return (
        <Tabs defaultValue="selectCandidates" className="w-full" value={activeTab} onValueChange={setActiveTab}>
            <Toaster richColors position="top-right" />
            <TabsList className="grid w-full grid-cols-2 bg-gray-200 text-[#111613]">
                <TabsTrigger value="selectCandidates" className="data-[state=active]:bg-white data-[state=active]:text-[#37A533] data-[state=active]:shadow-sm rounded-md cursor-pointer">
                    Choose Candidates
                </TabsTrigger>
                <TabsTrigger value="addCandidate" className="data-[state=active]:bg-white data-[state=active]:text-[#37A533] data-[state=active]:shadow-sm rounded-md cursor-pointer">
                    Add Candidate
                </TabsTrigger>
            </TabsList>

            {/* Tab 1: Select Existing Candidates */}
            <TabsContent value="selectCandidates">
                <Card className="bg-white border border-gray-300 shadow-sm">
                    <CardHeader>
                        <CardTitle className="text-[#111613]">Choose Candidates</CardTitle>
                        <CardDescription className="text-gray-600">Select one or more candidates.</CardDescription>
                    </CardHeader>
                    <CardContent className="space-y-4">
                        {existingCandidates.length > 0 ? (
                            <div className="space-y-2">
                                {existingCandidates.map((candidate) => (
                                    <div key={candidate.recordId} className="flex items-center space-x-2 p-2 border-b border-gray-100 last:border-b-0">
                                        <Checkbox
                                            id={`candidate-${candidate.recordId}`}
                                            checked={checkedCandidates.includes(candidate.recordId || '')}
                                            onCheckedChange={() => handleCheckboxChange(candidate.recordId || '')}
                                            className="data-[state=checked]:bg-[#37A533] data-[state=checked]:border-[#37A533] focus:ring-[#37A533]/50 cursor-pointer"
                                        />
                                        <Label htmlFor={`candidate-${candidate.recordId}`} className="flex-grow text-[#111613] cursor-pointer">
                                            <span className="font-medium tracking-wider px-2">{candidate.candidateName}</span>
                                        </Label>
                                    </div>
                                ))}

                                {/* Display Selected Candidates List */}
                                {selectedCandidates.length > 0 && (
                                    <div className="mt-4 pt-4 border-t border-gray-200">
                                        <h4 className="font-semibold text-md text-[#111613] mb-2">Selected Candidates:</h4>
                                        <ul className="list-disc list-inside space-y-1 text-sm text-gray-700">
                                            {selectedCandidates.map((c) => (
                                                <li key={`selected-${c.recordId}`}>
                                                    {c.candidateName} ({c.position})
                                                </li>
                                            ))}
                                        </ul>
                                    </div>
                                )}
                            </div>
                        ) : (
                            // UI for no existing candidates
                            <div className="text-center py-8 space-y-4">
                                <div className="text-gray-500">
                                    <svg className="mx-auto h-12 w-12" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z"></path></svg>
                                </div>
                                <div className="space-y-2">
                                    <p className="text-gray-700 font-medium">No candidates found</p>
                                    <p className="text-gray-500 text-sm">Please add new candidates using the Add Candidate tab.</p>
                                </div>
                                <Button
                                    onClick={() => handleSwitchTab("addCandidate")}
                                    className="bg-[#37A533] text-white hover:bg-[#1E651C] mt-4 cursor-pointer"
                                >
                                    Go to Add Candidate
                                </Button>
                            </div>
                        )}
                    </CardContent>
                    <CardFooter>
                        <Button
                            onClick={handleContinueClick}
                            disabled={checkedCandidates.length === 0}
                            className="bg-[#37A533] text-white hover:bg-[#1E651C] disabled:bg-gray-300 disabled:text-gray-500 rounded-md px-4 py-2 w-full cursor-pointer"
                        >
                            Continue with Selected ({checkedCandidates.length})
                        </Button>
                    </CardFooter>
                </Card>
            </TabsContent>

            {/* Tab 2: Add New Candidate */}
            <TabsContent value="addCandidate"> 
            <Accordion type="single" defaultValue='individual' collapsible className="w-full space-y-4">
                {/* Individual Candidate Upload */}
                <AccordionItem value="individual" className="border rounded-lg bg-white">
                    <AccordionTrigger className="px-4 hover:no-underline hover:bg-gray-50 cursor-pointer" defaultChecked>
                        <div className="flex flex-col items-start">
                            <h3 className="text-lg font-semibold font-serif text-[#111613] tracking-wider">Add Individual Candidate</h3>
                            <p className="text-sm text-gray-600 font-sans tracking-wider">Upload a single candidate's details and resume</p>
                        </div>
                    </AccordionTrigger>
                    <AccordionContent className="px-4 pb-4">
                        <div className="space-y-4">
                            {/* Individual candidate form fields */}
                            <div className="space-y-2">
                                <Label htmlFor="newCandidateName" className="text-[#111613] font-medium">
                                    Candidate Name
                                </Label>
                                <Input
                                    id="newCandidateName"
                                    placeholder="e.g., Jane Doe"
                                    value={newCandidateName}
                                    onChange={(e) => setNewCandidateName(e.target.value)}
                                    className="border-gray-300 focus:border-[#37A533] focus:ring-[#37A533]/50 rounded-md"
                                    disabled={isSubmitting}
                                />
                            </div>

                            <div className="space-y-2">
                                <Label htmlFor="newCandidatePosition" className="text-[#111613] font-medium">
                                    Position Applying For
                                </Label>
                                {availableJobs.length > 0 ? (
                                    <Select
                                        value={newCandidatePosition}
                                        onValueChange={setNewCandidatePosition}
                                        disabled={isSubmitting}
                                    >
                                        <SelectTrigger className="w-full border-gray-300 focus:border-[#37A533] focus:ring-[#37A533]/50 rounded-md">
                                            <SelectValue placeholder="Select a position" />
                                        </SelectTrigger>
                                        <SelectContent>
                                            {availableJobs.map((job) => (
                                                <SelectItem 
                                                    key={job.recordId || job.jobTitle} 
                                                    value={job.jobTitle}
                                                    className="cursor-pointer hover:bg-[#e0f2e0]"
                                                >
                                                    {job.jobTitle}
                                                </SelectItem>
                                            ))}
                                        </SelectContent>
                                    </Select>
                                ) : (
                                    <div className="text-sm text-gray-500 bg-gray-50 p-3 rounded-md border border-gray-200">
                                        No job positions available. Please add job openings first.
                                    </div>
                                )}
                            </div>

                            <div className="space-y-2">
                                <Label htmlFor="resumeFile" className="text-[#111613] font-medium">
                                    Resume (PDF only)
                                </Label>
                                <Input
                                    id="resumeFile"
                                    type="file"
                                    accept=".pdf"
                                    onChange={handleFileChange}
                                    className="border-gray-300 focus:border-[#37A533] focus:ring-[#37A533]/50 rounded-md file:mr-4 file:py-2 file:px-4 file:rounded-md file:border-0 file:text-sm file:font-semibold file:bg-[#e0f2e0] file:text-[#1E651C] hover:file:bg-[#c1e4c1]"
                                    disabled={isSubmitting}
                                />
                                {newCandidateResumeFile && (
                                    <p className="text-xs text-gray-600 mt-1">Selected: {newCandidateResumeFile.name}</p>
                                )}
                            </div>

                            <Button
                                onClick={handleAddCandidateClick}
                                disabled={!newCandidateName.trim() || !newCandidatePosition || !newCandidateResumeFile || isSubmitting}
                                className="bg-[#37A533] text-white hover:bg-[#1E651C] disabled:bg-gray-300 disabled:text-gray-500 w-full rounded-md px-4 py-2"
                            >
                                Add Candidate to List
                            </Button>

                            {/* Display added candidates */}
                            {addedCandidates.length > 0 && (
                                <div className="mt-4 pt-4 border-t border-gray-200">
                                    <h4 className="font-semibold text-md text-[#111613] mb-2">Added Candidates:</h4>
                                    <ul className="list-disc list-inside space-y-1 text-sm text-gray-700">
                                        {addedCandidates.map((c, index) => (
                                            <li key={`${c.candidateName}-${index}`}>
                                                {c.candidateName} ({c.position})
                                            </li>
                                        ))}
                                    </ul>
                                    <Button
                                        //onClick={handleSaveBulkUploads} Implement this function
                                        disabled={isSubmitting || isProcessingRAR}
                                        className="w-full mt-4 bg-[#37A533] text-white hover:bg-[#1E651C] disabled:bg-gray-300 disabled:text-gray-500"
                                    >
                                        {isSubmitting ? 'Saving...' : `Save ${addedCandidates.length} Added Candidate(s) to Lark`}
                                    </Button>
                                </div>
                            )}
                        </div>
                    </AccordionContent>
                </AccordionItem>

                {/* Bulk Upload */}
                <AccordionItem value="bulk" className="border rounded-lg bg-white">
                    <AccordionTrigger className="px-4 hover:no-underline hover:bg-gray-50 cursor-pointer">
                        <div className="flex flex-col items-start">
                            <h3 className="text-lg font-semibold font-serif text-[#111613] tracking-wider">Add Multiple Candidates</h3>
                            <p className="text-sm text-gray-600 font-sans tracking-wider">Upload multiple resumes for the same position</p>
                        </div>
                    </AccordionTrigger>
                    <AccordionContent className="px-4 pb-4">
                        <div className="space-y-4">
                            <div className="space-y-2">
                                <Label htmlFor="bulkPosition" className="text-[#111613] font-medium">
                                    Position
                                </Label>
                                {availableJobs.length > 0 ? (
                                    <Select
                                        value={bulkPosition}
                                        onValueChange={setBulkPosition}
                                        disabled={isSubmitting}
                                    >
                                        <SelectTrigger className="w-full border-gray-300 focus:border-[#37A533] focus:ring-[#37A533]/50 rounded-md">
                                            <SelectValue placeholder="Select a position" />
                                        </SelectTrigger>
                                        <SelectContent>
                                            {availableJobs.map((job) => (
                                                <SelectItem 
                                                    key={job.recordId || job.jobTitle} 
                                                    value={job.jobTitle}
                                                    className="cursor-pointer hover:bg-[#e0f2e0]"
                                                >
                                                    {job.jobTitle}
                                                </SelectItem>
                                            ))}
                                        </SelectContent>
                                    </Select>
                                ) : (
                                    <div className="text-sm text-gray-500 bg-gray-50 p-3 rounded-md">
                                        No positions available
                                    </div>
                                )}
                            </div>

                            <div className="space-y-2">
                                <Label htmlFor="bulkResumeFiles" className="text-[#111613] font-medium">
                                    Upload Resumes (PDF only)
                                </Label>
                                <Input
                                    id="bulkResumeFiles"
                                    type="file"
                                    accept=".pdf"
                                    multiple
                                    onChange={handleBulkFileChange}
                                    className="border-gray-300 focus:border-[#37A533] focus:ring-[#37A533]/50 rounded-md file:mr-4 file:py-2 file:px-4 file:rounded-md file:border-0 file:text-sm file:font-semibold file:bg-[#e0f2e0] file:text-[#1E651C] hover:file:bg-[#c1e4c1]"
                                    disabled={isSubmitting}
                                />
                                {bulkResumeFiles.length > 0 && (
                                    <p className="text-sm text-gray-600">
                                        {bulkResumeFiles.length} files selected
                                    </p>
                                )}
                            </div>

                            <Button
                                onClick={handlePrepareBulkUpload}
                                disabled={!bulkPosition || bulkResumeFiles.length === 0 || isSubmitting}
                                className="bg-[#37A533] text-white hover:bg-[#1E651C] disabled:bg-gray-300 disabled:text-gray-500 w-full rounded-md px-4 py-2"
                            >
                                Prepare Bulk Upload
                            </Button>

                            {/* Display prepared bulk uploads */}
                            {bulkUploads.length > 0 && (
                                <div className="mt-4 pt-4 border-t border-gray-200">
                                    <h4 className="font-semibold text-md text-[#111613] mb-2">Prepared Uploads:</h4>
                                    {bulkUploads.map((upload, index) => (
                                        <div key={index} className="p-3 bg-gray-50 rounded-md mb-2">
                                            <p className="text-sm">
                                                {upload.resumeFile.length} resumes for {upload.position}
                                            </p>
                                        </div>
                                    ))}
                                    <Button
                                        onClick={handleStartAnalysis}
                                        disabled={isSubmitting || isProcessingRAR || bulkUploads.length === 0}
                                        className="w-full mt-4 bg-[#37A533] text-white hover:bg-[#1E651C] disabled:bg-gray-300 disabled:text-gray-500"
                                    >
                                        {isSubmitting ? 'Initiating...' : (isProcessingRAR ? `Processing... (Trace: ${rarTraceId?.substring(0, 6)}...)` : 'Start Cross-Job Match')}
                                    </Button>
                                    {/* Loading Indicator for RAR Processing */}
                                    {isProcessingRAR && (
                                        <div className="mt-4 p-3 bg-blue-50 border border-blue-200 rounded-md text-blue-700 text-sm">
                                            <LoadingIndicator message={`Analyzing Resumes...`} />
                                            {/* Optional: Display detailed progress */}
                                            {Object.entries(rarProgress).map(([key, value]) => (
                                                <p key={key} className="text-xs mt-1">{`${key}: ${value}`}</p>
                                            ))}
                                        </div>
                                    )}
                                </div>
                            )}
                        </div>
                    </AccordionContent>
                </AccordionItem>
            </Accordion>
            </TabsContent>
        </Tabs>
    );